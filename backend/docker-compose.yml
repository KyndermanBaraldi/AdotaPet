version: '3.9'

services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: always
    env_file:
      - .env
    command:
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
      - "--log.level=INFO"
      - "--log.format=common"
      - "--accesslog.format=common"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme:/etc/traefik/acme
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD_HASH}"

  django:
    build: ./
    env_file:
      - .env
    environment:
      DJANGO_ENV: ${DJANGO_ENV}
      DJANGO_SETTINGS_MODULE: core.settings
      APP_PORT: 8000
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      GDAL_LIBRARY_PATH: ${GDAL_LIBRARY_PATH}
      GEOS_LIBRARY_PATH: ${GEOS_LIBRARY_PATH}

    volumes:
      - ./src:/app:Z
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - traefik_network
      # - internal_network
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"

      # router
      - "traefik.http.routers.django.rule=Host(`${DOMAIN}`,`${WWW_DOMAIN}`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      # router HTTP
      - "traefik.http.routers.django-http.rule=Host(`${DOMAIN}`,`${WWW_DOMAIN}`)"
      - "traefik.http.routers.django-http.entrypoints=web"
      - "traefik.http.routers.django-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # gzip
      - "traefik.http.middlewares.gzip.compress=true"
      - "traefik.http.routers.django.middlewares=gzip"

  db:
    image: postgis/postgis:14-3.3
    container_name: postgis
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik_network
      # - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  static:
    image: nginx:1.25-alpine
    volumes:
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`${DOMAIN}`, `www.${DOMAIN}`) && (PathPrefix(`/static`) || PathPrefix(`/media`))"
      - "traefik.http.routers.static.entrypoints=websecure"
      - "traefik.http.routers.static.tls=true"
      - "traefik.http.services.static.loadbalancer.server.port=80"
      - "traefik.http.middlewares.static-headers.headers.customResponseHeaders.Cache-Control=max-age=31536000"

networks:
  traefik_network:
    driver: bridge
  # internal_network:
  #   driver: bridge
  #   internal: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
